/* 
 * This is an example of a linker script from cs140e that defines various
 * values.
 *
 * You should modify it (or feel free to replace it!) to do the lab.
 * Note: you will have to modify the makefile.
 */
SECTIONS
{
    LINK_ADDR = 0x8000;

    /* our simple a.out header.  will add as needed. */
    .crt0_header LINK_ADDR : {
        /* `b (SIZEOF(.crt0_header)-8) >> 2` to jump over the header */
        LONG(0xEA000000 | (SIZEOF(.crt0_header)-8) >> 2);

        /* magic cookie for sanity checking */
        LONG(0x12345678);
        /* 
         * the second word is the size of the header.  this lets us avoid changing
         * a bunch of code as we add fields.  You should copy the entire header
         * and just jump over it.
         */
        LONG(SIZEOF(.crt0_header));

        /* Where we are linked at */
        LONG(LINK_ADDR);
        /* 
         * total size of the binary file in bytes not including the header.
         * NOTE: bss data is *not* in the .bin: it contains only zeros so we
         * do not need to record them, just its size.
         */
        LONG(SIZEOF(.text) + SIZEOF(.data) + SIZEOF(.rodata) );

        /* can add stuff below and loader should still work */
        /* "hello world\0" */
        BYTE(0x68);
        BYTE(0x65);
        BYTE(0x6c);
        BYTE(0x6c);
        BYTE(0x6f);
        BYTE(0x20);
        BYTE(0x77);
        BYTE(0x6f);
        BYTE(0x72);
        BYTE(0x6c);
        BYTE(0x64);
        BYTE(0x0);
        . = ALIGN(4);
        /* The number of above bytes better be a multiple of 4. */
    }
	.text :  { KEEP(*(.text.boot))  *(.text*) }
    .data :   { . = ALIGN(4); *(.data*)   . = ALIGN(4); } 
    .rodata : { . = ALIGN(4); *(.rodata*) . = ALIGN(4); }
	.bss : {
        __bss_start__ = .;
        *(.bss*)
        . = ALIGN(4);
        *(COMMON)
        . = ALIGN(8);
        __bss_end__ = .;
        . = ALIGN(8);
        __heap_start__ = .;
    }
}
